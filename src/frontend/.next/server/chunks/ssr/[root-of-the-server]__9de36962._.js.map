{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/jacksonpress/ai-interview/src/hooks/useFetchInterviews.ts"],"sourcesContent":["/*Hook that reuses the fetch interviews component logic\n\nCan use this wherever we need to get a list of interviews that meet \na specific filter*/\n'use client';\nimport { useEffect, useState } from \"react\";\n\nexport function useFetchInterviews(filters={}) {\n    const [interviews, setInterviews] = useState([]);\n    //Arr instead of false bc we will have (prob.) more than 1 interview\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const query = new URLSearchParams(filters).toString();\n\n            const res = await fetch(`/api/interviews/${query}`)\n            const data = await res.json();\n            setInterviews(data);\n        };\n        fetchData();\n    }, [JSON.stringify(filters)]);\n\n    return {interviews};\n}"],"names":[],"mappings":"AAAA;;;iBAGiB;;;AAEjB;AADA;;AAGO,SAAS,mBAAmB,UAAQ,CAAC,CAAC;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC/C,oEAAoE;IAEpE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY;YACd,MAAM,QAAQ,IAAI,gBAAgB,SAAS,QAAQ;YAEnD,MAAM,MAAM,MAAM,MAAM,CAAC,gBAAgB,EAAE,OAAO;YAClD,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,cAAc;QAClB;QACA;IACJ,GAAG;QAAC,KAAK,SAAS,CAAC;KAAS;IAE5B,OAAO;QAAC;IAAU;AACtB","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/jacksonpress/ai-interview/src/hooks/useFetchInterviewById.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\n\ntype Interview = {\n    id: string;\n    title: string;\n    role: string;\n    type: string;\n    difficulty: string;\n    timeEstimate: string;\n    description: string;\n    tags: string[];\n  };\n\nexport function useFetchInterviewById(id: number) {\n    const [interview, setInterview] = useState<Interview | null>();\n\n    useEffect(() => {\n        const fetchInterview = async () => {\n            const res = await fetch(`/api/interviews/${id}`);\n            const data = await res.json();\n            setInterview(data);\n        }\n        fetchInterview();\n    }, [id]);\n\n    return {interview}\n}"],"names":[],"mappings":";;;AAAA;;AAaO,SAAS,sBAAsB,EAAU;IAC5C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,iBAAiB;YACnB,MAAM,MAAM,MAAM,MAAM,CAAC,gBAAgB,EAAE,IAAI;YAC/C,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,aAAa;QACjB;QACA;IACJ,GAAG;QAAC;KAAG;IAEP,OAAO;QAAC;IAAS;AACrB","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/jacksonpress/ai-interview/src/components/InterviewCard.tsx"],"sourcesContent":["'use client';\n\nimport { useFetchInterviewById } from \"@/hooks/useFetchInterviewById\";\nimport { useFetchInterviews } from \"@/hooks/useFetchInterviews\";\nimport { useEffect } from \"react\";\n\nexport default function InterviewCard({interview_id} : {interview_id: number}) {\n    const id = interview_id;\n\n    const {interview} = useFetchInterviewById(id);\n\n    if (!interview) return <div>not found</div>\n\n    return (\n        <div className=\"flex mt-10 items-center border border-gray-200 text-black\">\n            {interview.title}\n        </div>\n    )\n\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAMe,SAAS,cAAc,EAAC,YAAY,EAA0B;IACzE,MAAM,KAAK;IAEX,MAAM,EAAC,SAAS,EAAC,GAAG,CAAA,GAAA,sIAAA,CAAA,wBAAqB,AAAD,EAAE;IAE1C,IAAI,CAAC,WAAW,qBAAO,8OAAC;kBAAI;;;;;;IAE5B,qBACI,8OAAC;QAAI,WAAU;kBACV,UAAU,KAAK;;;;;;AAI5B","debugId":null}}]
}